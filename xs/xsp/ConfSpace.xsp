%module{Slic3r::XS};

%{
#include <myinit.h>
#include "ConfSpace.hpp"
%}

%name{Slic3r::ConfSpace} class ConfSpace {
    ConfSpace();
    ~ConfSpace();
    Clone<ConfSpace> clone()
        %code{% RETVAL = THIS; %};
  
    void add_Polygon(Polygon* poly, int left=-1, int right=-1)
        %code{% THIS->add_Polygon(*poly, left, right); %};
    void triangulate();

    Lines lines()
        %code{% THIS->edge_lines(&RETVAL); %};
    Points points()
        %code{% THIS->points(&RETVAL); %};
    Clone<Point> nearest_point(Point* from)
        %code{% 
                ConfSpace::Vertex* v=THIS->vertex_nearest(*from);
                if(!v) XSRETURN_UNDEF;
                RETVAL=v->point;
        %};
    Polyline* path(Point* from, Point* to)
        %code{% 
                RETVAL=new Polyline();
                THIS->path(*from, *to, RETVAL); 
        %};
    void SVG_dump_path(const char* fname, Point* from, Point* to, Polyline* sp)
        %code{% THIS->SVG_dump_path(fname, *from, *to, *sp); %};
                
};
